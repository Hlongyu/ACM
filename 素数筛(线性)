//线性筛
int prime[MAX_N];
bool is_prime[MAX_N+1];

// 返回n以内的素数的个数
int sieve(int n)
{
    int p = 0;
    // 初始化
    for(int i = 0; i <= n; i++)
    {
        is_prime[i] = true;
    }
    is_prime[0] = is_prime[1] = false;

    //原理: 当i = prime[j]的倍数时, i * prime[j+1] 一定被prime[j]筛过;
    //复杂度: O(n);
    for(int i = 2; i <= n; i++)
    {
        if(is_prime[i])
        {
            prime[p++] = i;
            for(int j = 0; j < p; j++)
            {
                if(i * prime[j] > n)
                    break;
                is_prime[i * prime[j]] = false;
                if(i % prime[j] == 0)
                    break;
            }
        }
    }
    return p;
}
